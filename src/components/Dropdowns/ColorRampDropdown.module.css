.colorRampSelector {
  display: flex;
  --height: var(--button-height);
  --width: 120px;
  height: var(--height);
  flex-direction: row;
  align-items: center;
}

.colorRampSelector img {
  /* 
   * Copied from https://stackoverflow.com/questions/7615009/disable-interpolation-when-scaling-a-canvas.
   * Prevents color ramps (especially hard-stop categorical ones) from being pixelated when scaled.
   */
  image-rendering: optimizeSpeed; /* Older versions of FF          */
  image-rendering: -moz-crisp-edges; /* FF 6.0+                       */
  image-rendering: -webkit-optimize-contrast; /* Safari                        */
  image-rendering: -o-crisp-edges; /* OS X & Windows Opera (12.02+) */
  image-rendering: pixelated; /* Awesome future-browsers       */
  -ms-interpolation-mode: nearest-neighbor; /* IE     */
}

.buttonContainer {
  position: relative;
  height: var(--height);
  padding: 0;
}

#selectorButton {
  width: var(--width);
  padding: 0;
  margin: 0;
  overflow: hidden;
  height: var(--height);
  filter: none;
}

#selectorButton:not(:hover):not(:active) {
  /* Override at-rest border color.*/
  border: 1px solid var(--color-borders);
}

#selectorButton.forceOpen {
  border: 1px solid var(--color-button-active);
}

#selectorButton:disabled > img {
  filter: grayscale(100%);
}

#selectorButton.categorical {
  /* Styles for when the dropdown button shows a categorical palette.
  Specifically, apply the outline styling and turn off transitions.*/
  outline: 1px solid var(--color-text-button);
  outline-offset: -2px;
  transition: outline 0s;
}

.dropdownContainer {
  /* Ant makes all of its dropdowns z-index 1050. */
  z-index: 1051;
  position: absolute;
  top: calc(--height + 1px);
  display: flex;
  flex-direction: column;
  background-color: var(--color-button);

  --border-width: 1px;
  --outline-width-selected: 1px;
  --outline-width-unselected: 0px;
  --radius: 6px;
  padding: var(--border-width) var(--border-width);
  gap: var(--border-width);
  border-radius: var(--radius);

  --button-radius: calc(var(--radius) - var(--border-width));

  transform-origin: top;
  visibility: hidden;
  transform: scaleY(0.9);
  opacity: 0;

  transition: all ease-in 0.2s 0.25s, gap 0s;
}

/** Overrides for when the categorical dropdown is being used, instead of
 * the normal color ramp version. Apply an extra border to each element,
 * making it thicker when hovered.
 */
.dropdownContainer.categorical {
  --outline-width-unselected: 1px;
  --outline-width-selected: 2px;
  gap: 1px;
}

/** 
 * Show the container if the root button is hovered, and keep
 * it visible while it continues to be hovered over.
 * Also show the dropdown container when forced open (for accessibility).
 */
.buttonContainer:hover:not(.disabled) > .dropdownContainer,
.dropdownContainer:hover,
.dropdownContainer.forceOpen {
  visibility: visible;
  transform: scaleY(1);
  opacity: 1;
  transition: all 0.1s;
}

.dropdownButton {
  width: var(--width);
  border-radius: 0;
  box-shadow: none;
  margin: 0;
  padding: 0;
  border-width: 0;
  /* Required override, as default button has different border behavior */
  border: 0px solid transparent !important;
  outline: var(--outline-width-unselected) solid var(--color-text-button);
  outline-offset: -1px;
  transition: outline 0s ease 0s;
  overflow: hidden;
  display: flex;
}

.dropdownButton:first-child {
  border-radius: var(--button-radius) var(--button-radius) 0 0;
}

.dropdownButton:last-child {
  border-radius: 0 0 var(--button-radius) var(--button-radius);
}
.dropdownButton:focus,
.dropdownButton:hover {
  /* Required override, as default button has different border behavior */
  outline: var(--outline-width-selected) solid var(--color-text-button) !important;
  outline-offset: calc(0px - var(--outline-width-selected)) !important;
}
